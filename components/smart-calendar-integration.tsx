"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import {
  Calendar,
  Download,
  Smartphone,
  Globe,
  Clock,
  CheckCircle,
  Mail,
  Monitor,
  Tablet,
  Info,
  Star,
} from "lucide-react"
import {
  generateGoogleCalendarUrl,
  generateICSFile,
  generateOutlookCalendarUrl,
  generateAndroidCalendarIntent,
  getDeviceInfo,
  getRecommendedCalendarServices,
} from "@/lib/utils"

interface SmartCalendarIntegrationProps {
  appointmentData: {
    bookingCode: string
    name: string
    preferredDate: Date
    preferredTime: string
    message?: string
  }
}

export function SmartCalendarIntegration({ appointmentData }: SmartCalendarIntegrationProps) {
  const [deviceInfo, setDeviceInfo] = useState({ type: "unknown", os: "unknown", browser: "unknown" })
  const [recommendedServices, setRecommendedServices] = useState<any[]>([])
  const [calendarAdded, setCalendarAdded] = useState(false)
  const [showAllOptions, setShowAllOptions] = useState(false)

  useEffect(() => {
    const info = getDeviceInfo()
    setDeviceInfo(info)
    setRecommendedServices(getRecommendedCalendarServices(info))
  }, [])

  const startDate = new Date(appointmentData.preferredDate)
  const [hours, minutes] = appointmentData.preferredTime.split(":").map(Number)
  startDate.setHours(hours, minutes, 0, 0)

  const endDate = new Date(startDate)
  endDate.setHours(hours + 1, minutes, 0, 0)

  const title = "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ª–æ–≥–æ–ø–µ–¥–∞"
  const description = `–ó–∞–ø–∏—Å—å –∫ –ª–æ–≥–æ–ø–µ–¥—É
–ö–æ–¥ –∑–∞–ø–∏—Å–∏: ${appointmentData.bookingCode}
–ò–º—è: ${appointmentData.name}
${appointmentData.message ? `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${appointmentData.message}` : ""}

–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏:
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
üìß Email: info@logoped.ru
üè¢ –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1`
  const location = "–ö–∞–±–∏–Ω–µ—Ç –ª–æ–≥–æ–ø–µ–¥–∞, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1"

  const handleCalendarAction = async (service: any) => {
    try {
      switch (service.method) {
        case "native_ios":
          await addToiPhoneCalendar()
          break
        case "web_link":
          if (service.id === "google") {
            addToGoogleCalendar()
          } else if (service.id === "outlook") {
            addToOutlookCalendar()
          }
          break
        case "download_ics":
          downloadICSFile()
          break
        case "android_intent":
          addToAndroidCalendar()
          break
        default:
          downloadICSFile()
      }

      setCalendarAdded(true)
      setTimeout(() => setCalendarAdded(false), 3000)
    } catch (error) {
      console.error("Error adding to calendar:", error)
    }
  }

  const addToiPhoneCalendar = async () => {
    const icsContent = generateICSFile(title, startDate, endDate, description, location)

    if (navigator.share && deviceInfo.os === "ios") {
      const file = new File([icsContent], `logoped-${appointmentData.bookingCode}.ics`, {
        type: "text/calendar",
      })

      await navigator.share({
        title: "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å",
        text: "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ª–æ–≥–æ–ø–µ–¥–∞",
        files: [file],
      })
    } else {
      downloadICSFile()
    }
  }

  const addToGoogleCalendar = () => {
    const googleUrl = generateGoogleCalendarUrl(title, startDate, endDate, description, location)
    window.open(googleUrl, "_blank")
  }

  const addToOutlookCalendar = () => {
    const outlookUrl = generateOutlookCalendarUrl(title, startDate, endDate, description, location)
    window.open(outlookUrl, "_blank")
  }

  const addToAndroidCalendar = () => {
    const androidIntent = generateAndroidCalendarIntent(title, startDate, endDate, description, location)
    window.location.href = androidIntent
  }

  const downloadICSFile = () => {
    const icsContent = generateICSFile(title, startDate, endDate, description, location)
    const blob = new Blob([icsContent], { type: "text/calendar;charset=utf-8" })
    const link = document.createElement("a")
    link.href = URL.createObjectURL(blob)
    link.download = `logoped-appointment-${appointmentData.bookingCode}.ics`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
  }

  const getServiceIcon = (iconName: string) => {
    switch (iconName) {
      case "smartphone":
        return <Smartphone className="w-4 h-4" />
      case "globe":
        return <Globe className="w-4 h-4" />
      case "mail":
        return <Mail className="w-4 h-4" />
      case "calendar":
        return <Calendar className="w-4 h-4" />
      case "download":
        return <Download className="w-4 h-4" />
      case "monitor":
        return <Monitor className="w-4 h-4" />
      case "tablet":
        return <Tablet className="w-4 h-4" />
      default:
        return <Calendar className="w-4 h-4" />
    }
  }

  const getDeviceDisplayName = () => {
    if (deviceInfo.os === "ios") {
      return deviceInfo.type === "tablet" ? "iPad" : "iPhone"
    } else if (deviceInfo.os === "android") {
      return "Android"
    } else if (deviceInfo.os === "macos") {
      return "Mac"
    } else if (deviceInfo.os === "windows") {
      return "Windows"
    }
    return "–≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
  }

  const primaryService = recommendedServices.find((s) => s.primary)
  const secondaryServices = recommendedServices.filter((s) => !s.primary)

  return (
    <div className="bg-blue-50/80 backdrop-blur-xl rounded-2xl p-6 mb-6">
      <div className="flex items-center justify-center mb-4">
        <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3">
          <Calendar className="w-4 h-4 text-blue-600" />
        </div>
        <span className="text-blue-900 font-semibold text-lg">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å</span>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ */}
      <div className="flex items-center justify-center mb-4 p-3 bg-white/50 rounded-xl">
        <Info className="w-4 h-4 text-blue-600 mr-2" />
        <span className="text-blue-800 text-sm font-medium">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –¥–ª—è {getDeviceDisplayName()}</span>
      </div>

      {calendarAdded && (
        <div className="flex items-center justify-center mb-4 p-3 bg-green-100/80 rounded-xl">
          <CheckCircle className="w-5 h-5 text-green-600 mr-2" />
          <span className="text-green-800 font-medium text-sm">–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å!</span>
        </div>
      )}

      <div className="space-y-3">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–Ω–æ–ø–∫–∞ */}
        {primaryService && (
          <Button
            onClick={() => handleCalendarAction(primaryService)}
            className="w-full h-14 bg-blue-500 hover:bg-blue-600 active:bg-blue-700 text-white font-semibold rounded-xl 
                     transition-all duration-150 ease-out hover:scale-[1.02] active:scale-[0.98] shadow-lg relative"
          >
            <div className="flex items-center justify-center">
              {getServiceIcon(primaryService.icon)}
              <span className="ml-2">{primaryService.name}</span>
              <div className="absolute top-2 right-2">
                <Star className="w-3 h-3 text-yellow-300" />
              </div>
            </div>
            <div className="text-xs text-blue-100 mt-1">{primaryService.description}</div>
          </Button>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
        {!showAllOptions && secondaryServices.length > 0 && (
          <Button
            onClick={() => setShowAllOptions(true)}
            variant="outline"
            className="w-full h-10 bg-white/70 border-0 hover:bg-white/90 text-gray-700 font-medium rounded-xl 
                     transition-all duration-150 ease-out hover:scale-[1.02] active:scale-[0.98] text-sm"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã ({secondaryServices.length})
          </Button>
        )}

        {/* –í—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã */}
        {showAllOptions && (
          <div className="space-y-2">
            <div className="text-center text-gray-600 text-sm font-medium mb-3">–î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:</div>
            <div className="grid grid-cols-1 gap-2">
              {secondaryServices.map((service) => (
                <Button
                  key={service.id}
                  onClick={() => handleCalendarAction(service)}
                  variant="outline"
                  className="h-12 bg-white/70 border-0 hover:bg-white/90 text-gray-700 font-medium rounded-xl 
                           transition-all duration-150 ease-out hover:scale-[1.02] active:scale-[0.98] text-sm
                           flex items-center justify-start px-4"
                >
                  <div className="flex items-center">
                    {getServiceIcon(service.icon)}
                    <div className="ml-3 text-left">
                      <div className="font-medium">{service.name}</div>
                      <div className="text-xs text-gray-500">{service.description}</div>
                    </div>
                  </div>
                </Button>
              ))}
            </div>

            <Button
              onClick={() => setShowAllOptions(false)}
              variant="ghost"
              className="w-full h-8 text-gray-500 text-xs hover:bg-white/50 rounded-xl"
            >
              –°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            </Button>
          </div>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö */}
      <div className="mt-4 p-3 bg-white/50 rounded-xl">
        <div className="flex items-start space-x-2">
          <Clock className="w-4 h-4 text-blue-600 mt-0.5" />
          <div className="text-xs text-blue-800">
            <p className="font-medium mb-1">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:</p>
            <ul className="space-y-0.5 text-blue-700">
              <li>‚Ä¢ –ó–∞ –¥–µ–Ω—å –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</li>
              <li>‚Ä¢ –ó–∞ —á–∞—Å –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</li>
              <li>‚Ä¢ –ó–∞ 15 –º–∏–Ω—É—Ç –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É */}
      {deviceInfo.os === "ios" && (
        <div className="mt-4 p-3 bg-orange-50/80 rounded-xl">
          <p className="text-xs text-orange-800 font-medium mb-1">üí° –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π iPhone/iPad:</p>
          <p className="text-xs text-orange-700">
            –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å" –≤ –º–µ–Ω—é "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
          </p>
        </div>
      )}

      {deviceInfo.os === "android" && (
        <div className="mt-4 p-3 bg-green-50/80 rounded-xl">
          <p className="text-xs text-green-800 font-medium mb-1">ü§ñ –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Android:</p>
          <p className="text-xs text-green-700">
            Google Calendar –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –≤–∞—à–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å .ics —Ñ–∞–π–ª –¥–ª—è
            –¥—Ä—É–≥–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
          </p>
        </div>
      )}

      {deviceInfo.os === "windows" && (
        <div className="mt-4 p-3 bg-blue-50/80 rounded-xl">
          <p className="text-xs text-blue-800 font-medium mb-1">ü™ü –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Windows:</p>
          <p className="text-xs text-blue-700">
            Outlook Calendar –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å Windows. –°–∫–∞—á–∞–Ω–Ω—ã–π .ics —Ñ–∞–π–ª –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
          </p>
        </div>
      )}

      {deviceInfo.os === "macos" && (
        <div className="mt-4 p-3 bg-gray-50/80 rounded-xl">
          <p className="text-xs text-gray-800 font-medium mb-1">üçé –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Mac:</p>
          <p className="text-xs text-gray-700">
            .ics —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å" –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å iCloud
          </p>
        </div>
      )}
    </div>
  )
}
